import type { WASIContextOptions } from "../wasi/wasi-context.js";
import type { WASIExecutionResult } from "../types.js";
type WASIWorkerHostContext = Partial<Omit<WASIContextOptions, "stdin">>;
export declare class WASIWorkerHostKilledError extends Error {
}
export declare class WASIWorkerHost {
    binaryURL: string;
    stdinBuffer: SharedArrayBuffer;
    context: WASIWorkerHostContext;
    result?: Promise<WASIExecutionResult>;
    worker?: Worker;
    reject?: (reason?: unknown) => void;
    constructor(binaryURL: string, context: WASIWorkerHostContext);
    start(): Promise<WASIExecutionResult>;
    kill(): void;
    pushStdin(data: string): Promise<void>;
    pushEOF(): Promise<void>;
}
export {};
